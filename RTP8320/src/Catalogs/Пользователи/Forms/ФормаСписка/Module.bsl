&НаКлиенте
Перем ВыбранныеЗаписи;

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	ВыбранныеЗаписи = Новый СписокЗначений();
	Для Каждого Строка Из ВыделенныеСтроки Цикл		
		ВыбранныеЗаписи = ДобавитьИдентификационныеДанные(ВыбранныеЗаписи, Строка);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ДобавитьИдентификационныеДанные(СписокВыбранныхЗаписей, СтрокаИзСписка)
	ВыбранныйОбъект = СтрокаИзСписка.ПолучитьОбъект();
	УИдентификатор = ВыбранныйОбъект.УникальныйИдентификатор;
	ТипПользователя = ВыбранныйОбъект.ТипПользователя;
	Запись = Новый Структура("УИдентификатор, ТипПользователя", УИдентификатор, ТипПользователя);
	СписокВыбранныхЗаписей.Добавить(Запись);
	Возврат СписокВыбранныхЗаписей;
КонецФункции

&НаКлиенте
Процедура СписокПослеУдаления(Элемент)
	Для Каждого Запись Из ВыбранныеЗаписи Цикл
		Значение = Запись.Значение;
		УИдентификатор = Неопределено;
		ТипПользователя = Неопределено;
		Значение.Свойство("УИдентификатор", УИдентификатор);
		Значение.Свойство("ТипПользователя", ТипПользователя);		
		УдалитьСвязанныеЗаписи(УИдентификатор, ТипПользователя);
	КонецЦикла;
	ВыбранныеЗаписи = Неопределено;
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязанныеЗаписи(УИдентификатор, ТипПользователя)
	Если ТипПользователя = Перечисления.ТипыПользователей.Тестировщик Тогда
		УдалитьТестировщика(УИдентификатор);
	ИначеЕсли ТипПользователя = Перечисления.ТипыПользователей.УдаленныйТестировщик Тогда
		УдалитьУдаленногоТестировщика(УИдентификатор);
	ИначеЕсли ТипПользователя = Перечисления.ТипыПользователей.Заказчик Тогда
		УдалитьЗаказчика(УИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УдалитьЗаказчика(УИдентификатор)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |Заказчики.Пользователь,
				   |Заказчики.Ссылка,
				   |Заказчики.ФамилияИмяОтчество
				   |ИЗ Справочник.Заказчики КАК Заказчики";
	Результат = Запрос.Выполнить();
	ВыборкаЗаказчики = Результат.Выбрать();
	УдалитьЗапись(ВыборкаЗаказчики, УИдентификатор);
КонецПроцедуры

Процедура УдалитьУдаленногоТестировщика(УИдентификатор)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |УдаленныеТестировщики.Пользователь,
				   |УдаленныеТестировщики.Ссылка,
				   |УдаленныеТестировщики.ФамилияИмяОтчество
				   |ИЗ Справочник.УдаленныеТестировщики КАК УдаленныеТестировщики";
	Результат = Запрос.Выполнить();
	ВыборкаУдаленныеТестировщики = Результат.Выбрать();
	УдалитьЗапись(ВыборкаУдаленныеТестировщики, УИдентификатор);
КонецПроцедуры

Процедура УдалитьТестировщика(УИдентификатор)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
				   |Тестировщики.Пользователь,
				   |Тестировщики.Ссылка,
				   |Тестировщики.ФамилияИмяОтчество
				   |ИЗ Справочник.Тестировщики КАК Тестировщики";
	Результат = Запрос.Выполнить();
	ВыборкаТестировщики = Результат.Выбрать();
	УдалитьЗапись(ВыборкаТестировщики, УИдентификатор);
КонецПроцедуры

Процедура УдалитьЗапись(РезультатЗапроса, УИдентификатор)
	Пока РезультатЗапроса.Следующий() Цикл
		Если РезультатЗапроса.Пользователь = УИдентификатор Тогда
			Запись = РезультатЗапроса.Ссылка.ПолучитьОбъект();
			Запись.Удалить();
			Сообщить(РезультатЗапроса.ФамилияИмяОтчество + " удален!");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры