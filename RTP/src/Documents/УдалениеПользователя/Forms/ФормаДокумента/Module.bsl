&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Логин = Объект.ЛогинПользователя;
	
	Если Логин = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СообщениеОбУдалении = Новый СообщениеПользователю();
	
	Если УдалитьПользователя(Логин) тогда
		СообщениеОбУдалении.Текст = "Пользователь " + Логин + " успешно удален";
	Иначе
		СообщениеОбУдалении.Текст = "Пользователь " + Логин + " не найден";
	КонецЕсли;
	
	СообщениеОбУдалении.Сообщить();		
КонецПроцедуры

&НаСервере
Функция ПолучитьПользователя(Логин)
	Пользователь = Неопределено;
	
	Если Логин = Неопределено Тогда
		Сообщить("Логин не определен");
	Иначе		
		ЗапросПользователя = Новый Запрос;
		ЗапросПользователя.Текст = "ВЫБРАТЬ
					   |Пользователи.УникальныйИдентификатор,
					   |Пользователи.Ссылка,
					   |Пользователи.ФамилияИмяОтчество,
					   |Пользователи.ТипПользователя,
					   |Пользователи.Логин
					   |ИЗ Справочник.Пользователи КАК Пользователи";
		Результат = ЗапросПользователя.Выполнить();
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.Логин = Логин Тогда
				Запись = Выборка.Ссылка.ПолучитьОбъект();
				Пользователь = Запись;
				Сообщить(Выборка.ФамилияИмяОтчество + " получен!");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Пользователь;
КонецФункции


&НаСервере
Функция УдалитьПользователя(Логин)
	Пользователь = ПолучитьПользователя(Логин);
	Если Пользователь = Неопределено Тогда
		Сообщить("Пользователь не найден");
		Возврат Ложь;
	Иначе
		УдалитьСвязанныеЗаписи(Пользователь.УникальныйИдентификатор, Пользователь.ТипПользователя);
		Пользователь.Удалить();
		Сообщить("Пользователь удален");
		Возврат Истина;		
	КонецЕсли;	
КонецФункции

&НаСервере
Процедура УдалитьСвязанныеЗаписи(УИдентификатор, ТипПользователя)
	Запрос = Новый Запрос;
	
	Если ТипПользователя = Перечисления.ТипыПользователей.Тестировщик Тогда
		Запрос.Текст = "ВЫБРАТЬ
					   |Тестировщики.Пользователь,
					   |Тестировщики.Ссылка,
					   |Тестировщики.ФамилияИмяОтчество
					   |ИЗ Справочник.Тестировщики КАК Тестировщики";
	ИначеЕсли ТипПользователя = Перечисления.ТипыПользователей.УдаленныйТестировщик Тогда
		Запрос.Текст = "ВЫБРАТЬ
					   |УдаленныеТестировщики.Пользователь,
					   |УдаленныеТестировщики.Ссылка,
					   |УдаленныеТестировщики.ФамилияИмяОтчество
					   |ИЗ Справочник.УдаленныеТестировщики КАК УдаленныеТестировщики";
	ИначеЕсли ТипПользователя = Перечисления.ТипыПользователей.Заказчик Тогда
		Запрос.Текст = "ВЫБРАТЬ
					   |Заказчики.Пользователь,
					   |Заказчики.Ссылка,
					   |Заказчики.ФамилияИмяОтчество
					   |ИЗ Справочник.Заказчики КАК Заказчики";
	ИначеЕсли ТипПользователя = Перечисления.ТипыПользователей.Менеджер Тогда
		Запрос.Текст = "ВЫБРАТЬ
					   |Менеджеры.Пользователь,
					   |Менеджеры.Ссылка,
					   |Менеджеры.ФамилияИмяОтчество
					   |ИЗ Справочник.Менеджеры КАК Менеджеры";
	КонецЕсли;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Пользователь = УИдентификатор Тогда
			Запись = Выборка.Ссылка.ПолучитьОбъект();
			Запись.Удалить();
			Сообщить(Выборка.ФамилияИмяОтчество + " удален!");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры