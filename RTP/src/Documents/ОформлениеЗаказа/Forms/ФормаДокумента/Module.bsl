&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	НовыйБизнесПроцесс = СоздатьБизнесПроцесс();
	ЗаписатьЗаказ(НовыйБизнесПроцесс);
	НовыйБизнесПроцесс.ПолучитьОбъект().Старт();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьЗаказчика();
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаказчика()
	ТекущийПользователь =  ПараметрыСеанса.ТекущийПользователь;
	ЭтаФорма.Объект.Заказчик = ПолучитьЗаказчика(ТекущийПользователь.УникальныйИдентификатор);
	ЭтаФорма.Объект.Дата = ТекущаяДатаСеанса();
КонецПроцедуры

&НаСервере
Функция ПолучитьЗаказчика(УИдетификатор)
	Заказчик = Справочники.Заказчики.НайтиПоРеквизиту("Пользователь", УИдетификатор);	
	Возврат Заказчик;
КонецФункции

&НаСервере
Функция СоздатьБизнесПроцесс()
	ТекущийЗаказ = ЭтотОбъект.Объект;
	РабочаяГруппа = ПолучитьДоступнуюРабочуюГруппу(); 
	НовыйБизнесПроцесс = БизнесПроцессы.ПредоставлениеУслугУдаленногоТестирования.СоздатьБизнесПроцесс();
	НовыйБизнесПроцесс.Заказчик = ПараметрыСеанса.ТекущийПользователь;
	НовыйБизнесПроцесс.Менеджер = РабочаяГруппа.Менеджер;
	НовыйБизнесПроцесс.Тестировщик = РабочаяГруппа.Тестировщик;
	НовыйБизнесПроцесс.УдаленныйТестировщик = РабочаяГруппа.УдаленныйТестировщик;
	НовыйБизнесПроцесс.ОписаниеЗадачи = ТекущийЗаказ.Комментарии;
	НовыйБизнесПроцесс.Дата = ТекущаяДатаСеанса();	
	НовыйБизнесПроцесс.Записать();
	Возврат НовыйБизнесПроцесс.Ссылка;
КонецФункции

&НаСервере
Процедура ЗаписатьЗаказ(БизнесПроцесс)
	НовыйЗаказ = Справочники.Заказы.СоздатьЭлемент();
	НовыйЗаказ.Наименование = "Заказ клиента " + ПараметрыСеанса.ТекущийПользователь.ФамилияИмяОтчество + " от " + ТекущаяДатаСеанса();
	НовыйЗаказ.БизнесПроцесс = БизнесПроцесс;
	НовыйЗаказ.Записать();
КонецПроцедуры

&НаСервере
Функция ПолучитьДоступнуюРабочуюГруппу()
	ДоступныеРабочиеГруппы = Неопределено;
	Запрос = Новый Запрос();
	Запрос.Текст = "Выбрать 
	|РГ.Наименование, 
	|РГ.Ссылка 
	|ИЗ Справочник.РабочиеГруппы 
	|КАК РГ 
	|ГДЕ РГ.НаСмене = ИСТИНА";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий()	Цикл
			ДоступныеРабочиеГруппы = Выборка.Ссылка;
			Возврат ДоступныеРабочиеГруппы;
		КонецЦикла;
	КонецЕсли;
	Возврат ДоступныеРабочиеГруппы;
КонецФункции